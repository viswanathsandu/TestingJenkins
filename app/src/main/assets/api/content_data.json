{
  "contentData": [
    {
      "idContent": 2703,
      "idEntity": 1,
      "Type": "html",
      "Name": "2_Introduction To Work And Energy-2",
      "url": null,
      "ContentHtml": "<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html
        xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
    <meta charset="utf-8">
    <title>Untitled Document</title>
    <link href="http://staging.corsalite.com/v1/styles/corsalite.css" rel="stylesheet" />
    <style>
        body {
        font-family: "Trebuchet MS", "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", Tahoma, sans-serif;
        line-height: 1.5;
        font-size: 12pt;
        }
        .question {
        page-break-after: avoid;
        margin: 0;
        }
        table {
        width: 100%;
        page-break-inside: avoid;
        width: 100%;
        max-width: 100%;
        margin-bottom: 20px;
        text-align: left;
        }
        .text-right {
        text-align: right;
        }
        .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 {
        font-family: inherit;
        font-weight: 500;
        line-height: 1.1;
        color: inherit
        }
        .h1 .small, .h1 small, .h2 .small, .h2 small, .h3 .small, .h3 small, .h4 .small, .h4 small, .h5 .small, .h5 small, .h6 .small, .h6 small, h1 .small, h1 small, h2 .small, h2 small, h3 .small, h3 small, h4 .small, h4 small, h5 .small, h5 small, h6 .small, h6 small {
        font-weight: 400;
        line-height: 1;
        color: #777
        }
        .h1, .h2, .h3, h1, h2, h3 {
        margin-top: 20px;
        margin-bottom: 10px
        }
        .h1 .small, .h1 small, .h2 .small, .h2 small, .h3 .small, .h3 small, h1 .small, h1 small, h2 .small, h2 small, h3 .small, h3 small {
        font-size: 65%
        }
        .h4, .h5, .h6, h4, h5, h6 {
        margin-top: 10px;
        margin-bottom: 10px
        }
        .h4 .small, .h4 small, .h5 .small, .h5 small, .h6 .small, .h6 small, h4 .small, h4 small, h5 .small, h5 small, h6 .small, h6 small {
        font-size: 75%
        }
        .h1, h1 {
        font-size: 36px
        }
        .h2, h2 {
        font-size: 30px
        }
        .h3, h3 {
        font-size: 24px
        }
        .h4, h4 {
        font-size: 18px
        }
        .h5, h5 {
        font-size: 14px
        }
        .h6, h6 {
        font-size: 12px
        }
        p {
        margin: 0 0 10px
        }
        hr {
        margin-bottom: 20px;
        border: 0;
        border-top: 1px solid #e1e1e1;
        }
        .alert-info {
        padding: 6px 12px;
        color: #31708f;
        background-color: #d9edf7;
        border: 1px solid #bce8f1;
        border-radius: 3px;
        }
        input[type="checkbox"] {
        display: block !important;
        }
    </style>
</head>
<body>
<h3 class="topic">New Sub</h3>
<h5 class="alert-info">Fill in the Blank - Fill in the blank </h5>
<table>
    <thead>
    <tr>
        <th valign="top" width="40">Q.1</th>
        <th align="left" valign="top">
            <h4 class="question">
                <h4>
                    <strong>Insert a preposition if necessary. Choose from: </strong>
                    <strong style="line-height: 1.6;">
                        <em>at, by, for, of, on, past, till/until, to, with.</em>
                    </strong>
                </h4>
                <p style="color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana, 'Trebuchet MS'; font-size: 13px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 20.7999992370605px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;">
                    <strong>He promised us a share ___ the profits.</strong>
                </p>
            </h4>
        </th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td valign="middle">&nbsp;</td>
        <td valign="middle">
            <div>
                <b>Blank 1</b>
            </div>
            <input value="of" class="form-control" type="text">
        </td>
    </tr>
    </tbody>
</table>
<h5 class="alert-info">Multi Select Choice - Select all correct answers from the given options. </h5>
<table>
    <thead>
    <tr>
        <th valign="top" width="40">Q.2</th>
        <th align="left" valign="top">
            <h4 class="question">
                <h4>
                    <strong style="color: rgb(0, 0, 0); font-family: Calibri; font-size: 15px; line-height: 16.8666667938232px;">
                        <span style="font-family: Arial;">Africa’s Convention People’ Party (CPP) believes that it can offer its own solutions for the country’s problems, for its economy: _________ African development solution rather than accept or pursue prescriptions coming from outside.</span>
                    </strong>
                </h4>
            </h4>
        </th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td align="center" valign="middle">
            <input  type="checkbox">
        </td>
        <td valign="middle">
            <p>
                <span style="color: rgb(0, 0, 0); font-family: Arial; font-size: 15px; line-height: 16.8666667938232px;">a collaborative</span>
            </p>
        </td>
    </tr>
    </tbody>
    <tbody>
    <tr>
        <td align="center" valign="middle">
            <input checked = checked type="checkbox">
        </td>
        <td valign="middle">
            <p>
                <span style="color: rgb(0, 0, 0); font-family: Arial; font-size: 15px; line-height: 16.8666667938232px;">an independent</span>
            </p>
        </td>
    </tr>
    </tbody>
    <tbody>
    <tr>
        <td align="center" valign="middle">
            <input checked = checked type="checkbox">
        </td>
        <td valign="middle">
            <p>
                <span style="color: rgb(0, 0, 0); font-family: Arial; font-size: 15px; line-height: 16.8666667938232px;">an autonomous</span>
            </p>
        </td>
    </tr>
    </tbody>
    <tbody>
    <tr>
        <td align="center" valign="middle">
            <input  type="checkbox">
        </td>
        <td valign="middle">
            <p>
                <span style="color: rgb(0, 0, 0); font-family: Arial; font-size: 15px; line-height: 16.8666667938232px;">an exclusive</span>
            </p>
        </td>
    </tr>
    </tbody>
</table>
<h5 class="alert-info">Pick a sentence - Pick a sentence that best answers the question below. </h5>
<table>
    <thead>
    <tr>
        <th valign="top" width="40">Q.3</th>
        <th align="left" valign="top">
            <h4 class="question">
                <p>
<span style="font-size:16px;">
<span style="font-family:arial,helvetica,sans-serif;">

The first principle of ecodesign is that ‘waste equals food’.


<span onClick="pickSentence(this.id, 1249655)" id="sentence3" class="pickSentenceCls ">
<a href="javascript:void(0)">Today, a major clash between economics and ecology derives from the fact that nature's ecosystems are cyclical, whereas our industrial systems are linear. In nature, matter cycles continually, and thus ecosystems generate no overall waste.</a>
</span> Human businesses, by contrast, take natural resources, transform them into products plus waste, and sell the products to consumers, who discard more waste when they have used the products.
    </a>
</span>
<br />
<br />
<span onClick="pickSentence(this.id, 1249655)" id="sentence4" class="pickSentenceCls ">
<a href="javascript:void(0)">The principle ‘waste equals food’ means that all products and materials manufactured by industry, as well as the waste generated in the manufacturing processes, must eventually provide nourishment for something new.</a>
</span>
<span onClick="pickSentence(this.id, 1249655)" id="sentence5" class="pickSentenceCls ">
<a href="javascript:void(0)">A sustainable business organization would be embedded in an ‘ecology of organizations’, in which the waste of any one organization would be a resource for another.</a>
</span>
<span onClick="pickSentence(this.id, 1249655)" id="sentence6" class="pickSentenceCls ">
<a href="javascript:void(0)">In such a sustainable industrial system, the total outflow of each organization- its products and wastes- would be perceived and treated as resources cycling through the system.</a>
</span>
    </a>
</span>
                    </a>
                    </span>
                </p>
                <h4>
<span id="docs-internal-guid-c72a1db9-9174-1518-57be-17f5b11f4c15">
<span style="font-size: 16px; font-family: Arial; color: rgb(0, 0, 0); font-weight: bold; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">Select the sentence which explains the source of conflict between human businesses and ecosystems.</span>
</span>
                </h4>
            </h4>
        </th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td valign="middle">&nbsp;</td>
        <td valign="middle">
            <input class="from-control" id="sentenceAnswer_1249655" value="Today, a major clash between economics and ecology derives from the fact that nature's ecosystems are cyclical, whereas our industrial systems are linear. In nature, matter cycles continually, and thus ecosystems generate no overall waste." style="" class="form-control" ype="text">
        </td>
    </tr>
    </tbody>
</table>
<h5 class="alert-info">Grid - Select all correct answers in the grid. </h5>
<table>
    <thead>
    <tr>
        <th valign="top" width="40">Q.4</th>
        <th align="left" valign="top">
            <h4 class="question">
                <p>
                    <strong style="color: rgb(0, 0, 0); font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;">Match the items mentioned in the lists I and II below</strong>
                </p>
                <table border="1" cellpadding="1" cellspacing="1" style="width: 500px;">
                    <tbody>
                    <tr>
                        <td>
                            <strong style="color: rgb(0, 0, 0); font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;">List - I </strong>
                        </td>
                        <td>
                            <strong style="color: rgb(0, 0, 0); font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;">List - II</strong>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <strong style="color: rgb(0, 0, 0); font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;">a) Static friction</strong>
                        </td>
                        <td>
                            <strong style="color: rgb(0, 0, 0); font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;">e) constant for a given pair of surfaces</strong>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <strong style="color: rgb(0, 0, 0); font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;">b) Limiting friction</strong>
                        </td>
                        <td>
                            <strong style="color: rgb(0, 0, 0); font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;">f) Independent of area of contact</strong>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <strong style="color: rgb(0, 0, 0); font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;">c) Kinetic friction</strong>
                        </td>
                        <td>
                            <strong style="color: rgb(0, 0, 0); font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;">g) Self adjusting</strong>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <strong style="color: rgb(0, 0, 0); font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;">d)Rolling friction</strong>
                        </td>
                        <td>
                            <strong style="color: rgb(0, 0, 0); font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;">h) Has the least magnitude for a given normal reaction</strong>
                        </td>
                    </tr>
                    </tbody>
                </table>
            </h4>
        </th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td valign="middle">&nbsp;</td>
        <td valign="middle">
            <table border="0" cellpadding="5">
                <tr>
                    <td>&nbsp;</td>
                    <td>e</td>
                    <td>f</td>
                    <td>g</td>
                    <td>h</td>
                </tr>
                <tr>
                    <td>a</td>
                    <td>
                        <input  value="a-e" type="checkbox" style="display: block !important">
                    </td>
                    <td>
                        <input  value="a-f" type="checkbox" style="display: block !important">
                    </td>
                    <td>
                        <input checked = checked value="a-g" type="checkbox" style="display: block !important">
                    </td>
                    <td>
                        <input  value="a-h" type="checkbox" style="display: block !important">
                    </td>
                </tr>
                <tr>
                    <td>b</td>
                    <td>
                        <input checked = checked value="b-e" type="checkbox" style="display: block !important">
                    </td>
                    <td>
                        <input  value="b-f" type="checkbox" style="display: block !important">
                    </td>
                    <td>
                        <input  value="b-g" type="checkbox" style="display: block !important">
                    </td>
                    <td>
                        <input  value="b-h" type="checkbox" style="display: block !important">
                    </td>
                </tr>
                <tr>
                    <td>c</td>
                    <td>
                        <input  value="c-e" type="checkbox" style="display: block !important">
                    </td>
                    <td>
                        <input checked = checked value="c-f" type="checkbox" style="display: block !important">
                    </td>
                    <td>
                        <input  value="c-g" type="checkbox" style="display: block !important">
                    </td>
                    <td>
                        <input  value="c-h" type="checkbox" style="display: block !important">
                    </td>
                </tr>
                <tr>
                    <td>d</td>
                    <td>
                        <input  value="d-e" type="checkbox" style="display: block !important">
                    </td>
                    <td>
                        <input  value="d-f" type="checkbox" style="display: block !important">
                    </td>
                    <td>
                        <input  value="d-g" type="checkbox" style="display: block !important">
                    </td>
                    <td>
                        <input checked = checked value="d-h" type="checkbox" style="display: block !important">
                    </td>
                </tr>
            </table>
        </td>
    </tr>
    </tbody>
</table>
<h5 class="alert-info">Fraction - Enter the correct answer as a fraction value. </h5>
<table>
    <thead>
    <tr>
        <th valign="top" width="40">Q.5</th>
        <th align="left" valign="top">
            <h4 class="question">
                <h4>
<span style="font-size:16px;">
<em style="color: rgb(51, 51, 51); font-family: Calibri; font-size: 16px; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 24px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;">
    <span style="font-family: Calibri;">What is the greatest possible value of expression f(x) = -4x</span>
</em>
<em style="color: rgb(51, 51, 51); font-family: Calibri; font-size: 16px; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 24px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;">
    <span style="font-family: Calibri; vertical-align: super;">2</span>
</em>
<em style="color: rgb(51, 51, 51); font-family: Calibri; font-size: 16px; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 24px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;">
    <span style="font-family: Calibri;">+7x +10?</span>
</em>
</span>
                </h4>
            </h4>
        </th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td valign="middle">&nbsp;</td>
        <td valign="middle">
            <input value="209" style="width: 200px; border : 1px solid #000;" class="form-control" type="text">
            /

            <input value="16" style="width: 200px; border : 1px solid #000;" class="form-control" type="text">
        </td>
    </tr>
    </tbody>
</table>
<h5 class="alert-info">Alphanumeric - Enter the correct answer as a alphanumeric value. </h5>
<table>
    <thead>
    <tr>
        <th valign="top" width="40">Q.6</th>
        <th align="left" valign="top">
            <h4 class="question">
                <h4>
                    <strong>Fill in the blank with the correct form of the verb given against each sentence.</strong>
                </h4>
                <p>
                    <strong>She had ___ all through the winter. (work)</strong>
                </p>
            </h4>
        </th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td valign="middle">&nbsp;</td>
        <td valign="middle">
            <textarea rows="10" style="width: 90%; display: block !important">been working</textarea>
        </td>
    </tr>
    </tbody>
</table>
<h5 class="alert-info">Single Select Choice - Select one and only correct answer from the given options. </h5>
<table>
    <thead>
    <tr>
        <th valign="top" width="40">Q.7</th>
        <th align="left" valign="top">
            <h4 class="question">
                <h4>
                    <strong>
                        <span style="font-family:Arial; font-size:11pt; ">People in general vehemently censure the medical profession, but, when it is a matter of personal physicians, they are hardly ___________.</span>
                    </strong>
                </h4>
            </h4>
        </th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td align="center" valign="middle">
            <input name="answer_1249650"  type="radio">
        </td>
        <td valign="middle">
            <p>
                <span style="font-family:Arial; font-size:11pt">appreciative</span>
            </p>
        </td>
    </tr>
    </tbody>
    <tbody>
    <tr>
        <td align="center" valign="middle">
            <input name="answer_1249650"  type="radio">
        </td>
        <td valign="middle">
            <p>
                <span style="font-family:Arial; font-size:11pt">nonchalant</span>
            </p>
        </td>
    </tr>
    </tbody>
    <tbody>
    <tr>
        <td align="center" valign="middle">
            <input name="answer_1249650" checked = checked type="radio">
        </td>
        <td valign="middle">
            <p>
                <span style="font-family:Arial; font-size:11pt">critical</span>
            </p>
        </td>
    </tr>
    </tbody>
    <tbody>
    <tr>
        <td align="center" valign="middle">
            <input name="answer_1249650"  type="radio">
        </td>
        <td valign="middle">
            <p>
                <span style="font-family:Arial; font-size:11pt">eulogistic</span>
            </p>
        </td>
    </tr>
    </tbody>
    <tbody>
    <tr>
        <td align="center" valign="middle">
            <input name="answer_1249650"  type="radio">
        </td>
        <td valign="middle">
            <p>
                <span style="font-family:Arial; font-size:11pt">nonchalant</span>
            </p>
        </td>
    </tr>
    </tbody>
</table>
<h5 class="alert-info">N Blank Multi Select - For each blank select one entry from the corresponding column of choices. Fill all blanks in the way that best completes the text. </h5>
<table>
    <thead>
    <tr>
        <th valign="top" width="40">Q.8</th>
        <th align="left" valign="top">
            <h4 class="question">
                <h4>
<span style="font-size:14px;">
<strong>The NGO as an expression of voluntarism is a Janus-faced entity and it is this ________ nature that puts it in a ______ state of suspicion.</strong>
</span>
                </h4>
            </h4>
        </th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td valign="middle">&nbsp;</td>
        <td valign="middle">
            <div class="row ">
                <div style="width: 200px;">
                    <label>
                        <div class="blankQuestion">
                            <div class="heading">
                                <div class="col">Blank 1</div>
                                <div class="col">Blank 2</div>
                            </div>
                            <div class="table-row">
                                <div class="col nblankOption nblankOption_active">double</div>
                                <div class="col nblankOption nblankOption_active">perpetual</div>
                            </div>
                            <div class="table-row">
                                <div class="col nblankOption nblankOption_active">edged</div>
                                <div class="col nblankOption ">Multiple</div>
                            </div>
                        </div>
                    </label>
                </div>
            </div>
        </td>
    </tr>
    </tbody>
</table>
<h5 class="alert-info">N Blank Single Select - For each blank select one entry from the corresponding column of choices. Fill all blanks in the way that best completes the text. </h5>
<table>
    <thead>
    <tr>
        <th valign="top" width="40">Q.9</th>
        <th align="left" valign="top">
            <h4 class="question">
                <h4>
<span style="font-size:14px;">
<strong>
    <span style="font-family: Arial;">A look at astronomy and space exploration will reveal that _______ in diverse field is needed to _______ in knowledge.</span>
</strong>
</span>
                </h4>
            </h4>
        </th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td valign="middle">&nbsp;</td>
        <td valign="middle">
            <div class="row ">
                <div style="width: 200px;">
                    <label>
                        <div class="blankQuestion">
                            <div class="heading">
                                <div class="col">Blank 1</div>
                                <div class="col">Blank 2</div>
                            </div>
                            <div class="table-row">
                                <div class="col nblankOption ">obfuscation</div>
                                <div class="col nblankOption ">stratification</div>
                            </div>
                            <div class="table-row">
                                <div class="col nblankOption nblankOption_active">expertise</div>
                                <div class="col nblankOption ">ossification</div>
                            </div>
                            <div class="table-row">
                                <div class="col nblankOption ">aggrandizement</div>
                                <div class="col nblankOption nblankOption_active">advancement</div>
                            </div>
                        </div>
                    </label>
                </div>
            </div>
        </td>
    </tr>
    </tbody>
</table>
<h5 class="alert-info">Numeric - Enter the correct answer as a numeric value. </h5>
<table>
    <thead>
    <tr>
        <th valign="top" width="40">Q.10</th>
        <th align="left" valign="top">
            <h4 class="question">
                <h4>
                    <em>
<span style="font-size:14px;">What is the units’ digit of 7
<sup>99</sup>?
</span>
                    </em>
                </h4>
            </h4>
        </th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td valign="middle">&nbsp;</td>
        <td valign="middle">
            <input class="from-control" id="sentenceAnswer_1249649" value="3" style="width: 200px; border : 1px solid #000;" class="form-control" ype="text">
        </td>
    </tr>
    </tbody>
</table>
<h5 class="alert-info">Word Properties - Please select the correct answer by clicking on links below. </h5>
<table>
    <thead>
    <tr>
        <th valign="top" width="40">Q.11</th>
        <th align="left" valign="top">
            <h4 class="question">
                <p>Charu
<span class="words">
<a class='wordDisplay ' href='javascript: void(0)' id='word_1'
   onClick=showOptions('1')>Plays</a>
</span>Cricket. She
<span class="words">
<a class='wordDisplay ' href='javascript: void(0)' id='word_2'
   onClick=showOptions('2')>won</a>
</span>match
                </p>
            </h4>
        </th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td valign="middle">&nbsp;</td>
        <td valign="left">
            <div class="row wordOptionsCls" id="wordOptions_1" style="display: none;">
                <div class="radio ">
                    <label onclick = "wordOptionSelect(2)">
                        <input   value="Plays~Verb" type="radio" id="answer_1" class=" " name="answer_1" >
                        1) Verb
                    </label>
                </div>
                <div class="radio ">
                    <label onclick = "wordOptionSelect(2)">
                        <input   value="Plays~Adverb" type="radio" id="answer_1" class=" " name="answer_1" >
                        2) Adverb
                    </label>
                </div>
            </div>
            <div class="row wordOptionsCls" id="wordOptions_2" style="display: none;">
                <div class="radio ">
                    <label onclick = "wordOptionSelect(2)">
                        <input   value="won~Adjective" type="radio" id="answer_2" class=" " name="answer_2" >
                        1) Adjective
                    </label>
                </div>
                <div class="radio ">
                    <label onclick = "wordOptionSelect(2)">
                        <input   value="won~Noun" type="radio" id="answer_2" class=" " name="answer_2" >
                        2) Noun
                    </label>
                </div>
            </div>
            <div class="row radio ">
                <div class="row mar_t10">
                    <input readonly type="text" name="answer" id="wordAnswer"
                           class='form-control' value=""  >
                </div>
            </div>
        </td>
    </tr>
    </tbody>
</table>
</body>
</html>
<script src="http://staging.corsalite.com/v1/js/jquery-1.11.0.min.js"></script>
<script>
function showOptions(wordid) {
$(".wordDisplay").removeClass('highlightWord');
$('#word_'+wordid).addClass('highlightWord');

$('.wordOptionsCls').hide();
$('#wordOptions_'+wordid).show();
}


function wordOptionSelect(numberWords) {
$(".wordDisplay").removeClass('highlightWord');
$('.wordOptionsCls').hide();

selAnswer = "";

for(var i = 1; i <= numberWords; i++) {
var answerSel = $("input:radio[name=answer_"+i+"]:checked").val();

if(answerSel != undefined) {
if(selAnswer == "") {
selAnswer += answerSel;
} else {
selAnswer += ","+answerSel;
}
}
}
$("#wordAnswer").val(selAnswer);
}


function pickSentence(sentenceId, qid) {
$(".pickSentenceCls").removeClass('highlightSentence');
$('#'+sentenceId).addClass('highlightSentence');
$('#sentenceAnswer_'+qid).val($('#'+sentenceId+' a').html());
}

</script>",
      "Status": "Active",
      "UpdateTime": "2015-08-05 11:44:47"
    }
  ]
}